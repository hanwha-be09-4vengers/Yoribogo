apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: yoribogo-ingress
  annotations:
    # 기본적으로 NGINX Ingress 컨트롤러는 모든 HTTP 트래픽을 HTTPS로 리다이렉트한다.
    # 이 설정을 "false"로 지정하면 HTTP 요청을 HTTPS로 자동 리다이렉트 하지 않는다.
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    
    # 매칭된 경로에서 /boot 부분을 제거하고 나머지 부분만 백엔드 서비스로 전달한다.
    nginx.ingress.kubernetes.io/rewrite-target: /$2

    # SSE 지원을 위해 proxy-buffering을 비활성화.
    # proxy-buffering을 비활성화하면 서버에서 클라이언트로 스트리밍 응답을 원활히 보낼 수 있다.
    nginx.ingress.kubernetes.io/proxy-buffering: "off"

    # SSE의 연결 유지 시간을 길게 설정하기 위한 proxy-read-timeout 설정.
    # 이 설정을 통해 연결이 끊기지 않고 스트리밍이 유지된다.
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"

    # SSE 연결 유지 시간 설정.
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"

    # # UTF-8 인코딩을 위한 Content-Type 설정
    # nginx.ingress.kubernetes.io/configuration-snippet: |
    #   more_set_headers "Content-Type: application/json; charset=utf-8";
spec:
  # 사용할 Ingress 컨트롤러의 클래스를 지정. 여기서는 NGINX Ingress 컨트롤러를 사용하도록 설정
  ingressClassName: nginx  
  rules:
  - http:
      paths:
      - path: /()(.*)
        # rewriter와 관련된 사이트 주소: https://kubernetes.github.io/ingress-nginx/examples/rewrite/
        # ImplementationSpecific은 Ingress 컨트롤러의 구현에 따라 경로 매칭 방식이 결정된다.
        # NGINX Ingress Controller의 경우, 정규 표현식을 포함한 더 유연한 라우팅 규칙을 적용할 수 있다.
        # 이는 Prefix나 Exact보다 더 복잡한 경로 매칭을 가능하게 한다.
        # 예: /, /about, /users 등
        pathType: ImplementationSpecific
        backend:
          service:
            name: vue002ser
            port: 
              number: 8000
              
      - path: /boot(/|$)(.*)
        # 여기서도 ImplementationSpecific을 사용하여 /boot로 시작하는 모든 경로를 매칭한다.
        # (/|$)는 /boot 다음에 /가 오거나 문자열이 끝나는 경우를 모두 포함한다.
        # (.*)는 그 뒤의 모든 문자열을 캡처한다.
        # 예: /boot, /boot/, /boot/plus, /boot/users 등
        pathType: ImplementationSpecific
        backend:
          service:
            name: boot002ser
            port: 
              number: 8001
